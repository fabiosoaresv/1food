{"ast":null,"code":"import PropTypes from \"prop-types\";\nimport { DEFAULTS } from \"./variables\";\nexport var makePropTypesFactory = function makePropTypesFactory(makePropTypes) {\n  return function (variables) {\n    return makePropTypes(Object.assign({}, DEFAULTS, variables));\n  };\n};\nexport var makeValidatingTransformFactory = function makeValidatingTransformFactory(makePropTypesFunc, transformFunc) {\n  return function () {\n    var variables = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULTS;\n    var propTypes = makePropTypesFunc(variables);\n    return function (props, componentName) {\n      var location = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"prop\";\n      PropTypes.checkPropTypes(propTypes, props, location, componentName);\n      return transformFunc(props);\n    };\n  };\n};\nexport var makeRootValidatingTransformFactory = function makeRootValidatingTransformFactory() {\n  for (var _len = arguments.length, makeValidatingTransformFuncs = new Array(_len), _key = 0; _key < _len; _key++) {\n    makeValidatingTransformFuncs[_key] = arguments[_key];\n  }\n\n  return function () {\n    var variables = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULTS;\n    var validatingTransformFuncs = makeValidatingTransformFuncs.map(function (func) {\n      return func(variables);\n    });\n    return function (props, componentName) {\n      var location = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"prop\";\n      return validatingTransformFuncs.reduce(function (acc, func) {\n        return func(acc, componentName, location);\n      }, props);\n    };\n  };\n};","map":null,"metadata":{},"sourceType":"module"}